#!/bin/bash
#SBATCH -A b1027                       # allocation code
#SBATCH -J TiOF           # job name
#SBATCH -o TiOF.o%j # output file name
#SBATCH -e TiOF.e%j # error file name
#SBATCH -N 6                    # number of nodes to use
#SBATCH --ntasks-per-node=28    # num processors per node
#SBATCH -p buyin                # queue (partition)
#SBATCH -t 8:00:00              # wall time (hh:mm:ss)
#SBATCH --mail-user=siddharthanathan2026@u.northwestern.edu
#SBATCH --mail-type=begin       # email when job starts
#SBATCH --mail-type=end         # email when job ends

module use /hpc/software/spack_v17d2/spack/share/spack/modules/linux-rhel7-x86_64/
module load utilities
module load python/3.8.4
module load vasp/5.4.4-openmpi-intel

export VASP_COMMAND="mpirun -n $SLURM_NTASKS /hpc/software/spack_v17d2/spack/opt/spack/linux-rhel7-x86_64/intel-2021.4.0/vasp-5.4.4-openmpi-intel/vasp_std"
export VASP_PP_PATH="/projects/b1027/Siddhartha_work/pseudopotentials"

cp POSCAR POSCAR.orig
mkdir std_outs


        for j in 2 1; do
                cp calc.py calc_ib${j}.py

                sed -i -e "s/AAA/$j/g" calc_ib${j}.py

                if [ $j == 1 ]; then
                        sed -i -e "s/CCC/-8/g" calc_ib${j}.py
		else
			sed -i -e "s/CCC/-6/g" calc_ib${j}.py
                
		fi

                python3 calc_ib${j}.py
                cp CONTCAR POSCAR
                cp vasp.out vasp.out_ib${j}
                mv vasp.out_ib${j} ./std_outs
        done




