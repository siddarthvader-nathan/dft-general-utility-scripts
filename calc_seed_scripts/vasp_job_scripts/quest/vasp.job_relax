#!/bin/bash
#SBATCH -A p31755                      # allocation code
#SBATCH -J job          # job name
#SBATCH -o job.o%j # output file name
#SBATCH -e job.e%j # error file name
#SBATCH -N 2                   # number of nodes to use
#SBATCH --ntasks-per-node=32    # num processors per node
#SBATCH -p short                # queue (partition)
#SBATCH -t 3:00:00              # wall time (hh:mm:ss)
#SBATCH --mail-user=siddharthanathan2026@u.northwestern.edu
#SBATCH --mail-type=begin       # email when job starts
#SBATCH --mail-type=end         # email when job ends

module purge
module load python-miniconda3/4.12.0
module load gstreamer/1.20
module load moose/1.0.0
module load vasp/6.2.1-openmpi-intel-cuda

eval "$(conda shell.bash hook)"
conda activate questenv 

export VASP_COMMAND="mpirun -n $SLURM_NTASKS vasp_std"
export VASP_PP_PATH="/projects/b1027/Siddhartha_work/pseudopotentials"

cp POSCAR POSCAR.orig
mkdir std_outs


        for j in 2 1; do
                cp calc.py calc_ib${j}.py

                sed -i -e "s/AAA/$j/g" calc_ib${j}.py

                if [ $j == 1 ]; then
                        sed -i -e "s/CCC/-8/g" calc_ib${j}.py
                        sed -i -e "s/tbd/True/g" calc_ib${j}.py
                else
			sed -i -e "s/CCC/-6/g" calc_ib${j}.py
                        sed -i -e "s/tbd/False/g" calc_ib${j}.py
                
		fi

                /projects/p31755/.conda/envs/questenv/bin/python calc_ib${j}.py
                cp CONTCAR POSCAR
                cp OUTCAR OUTCAR_ib${j}
                cp vasp.out vasp.out_ib${j}
                mv vasp.out_ib${j} ./std_outs
        done



